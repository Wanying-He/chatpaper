// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Paper {
  id          String   @id @default(cuid())
  title       String
  filename    String
  filepath    String
  uploadDate  DateTime @default(now())
  fileSize    Int
  annotations Annotation[]
  aiConversations AiConversation[]

  @@map("papers")
}

model Annotation {
  id              String   @id @default(cuid())
  paperId         String
  pageNumber      Int
  coordinates     String   // JSON string with selection coordinates
  highlightedText String
  createdAt       DateTime @default(now())

  paper           Paper    @relation(fields: [paperId], references: [id], onDelete: Cascade)
  comments        Comment[]
  aiConversations AiConversation[]

  @@map("annotations")
}

model Comment {
  id           String   @id @default(cuid())
  annotationId String
  content      String
  isAiResponse Boolean  @default(false)
  createdAt    DateTime @default(now())

  annotation   Annotation @relation(fields: [annotationId], references: [id], onDelete: Cascade)

  @@map("comments")
}

model AiConversation {
  id           String   @id @default(cuid())
  paperId      String
  annotationId String?
  userQuestion String
  aiResponse   String
  createdAt    DateTime @default(now())

  paper        Paper       @relation(fields: [paperId], references: [id], onDelete: Cascade)
  annotation   Annotation? @relation(fields: [annotationId], references: [id], onDelete: Cascade)

  @@map("ai_conversations")
}
